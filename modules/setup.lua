--[[
feel free to skid this if you can crack it, also idc :troll:
]]--

local v0={};v0.__index=v0;v0.new=function() return setmetatable({},v0);end;v0.tableFind=function(v12,v13,v14) for v40,v41 in v13 do if (v41==v14) then return v40;elseif (type(v41)=="table") then local v51=v12:tableFind(v41,v14);if v51 then return v40,v51;end end end return false;end;v0.deepclone=function(v15,v16) local v17={};for v42,v43 in v16 do v17[v42]=((type(v43)=="table") and v15:deepclone(v43)) or v43 ;end return v17;end;v0.safePathCheck=function(v18,v19) local v20=debug.info(v19,"s");if v20 then return string.match(v20,"([^%.]+)$");end return false;end;v0.isCallable=function(v21,v22) if (type(v22)=="function") then return true;elseif (type(v22)=="table") then local v50=getmetatable(v22);return v50 and (type(v50.__call)=="function") ;end return false;end;v0.findConstant=function(v23,v24,v25) local v26=select(2,pcall(debug.getconstants,v24));for v45=1, #v26 do local v46=v26[v45];if v25(v45,v46) then return v46,v45;end end return nil;end;v0.findUpvalue=function(v27,v28,v29) local v30=select(2,pcall(debug.getupvalues,v28));for v47=1, #v30 do local v48=v30[v47];if v29(v47,v48) then return v47,v48;end end return nil;end;v0.reverseTable=function(v31,v32) local v33={};for v49= #v32,1, -1 do table.insert(v33,v32[v49]);end return v33;end;v0.round=function(v34,v35,v36) v36=v36 or 1 ;return math.floor((v35 + (v36/2))/v36 ) * v36 ;end;v0.noClosureUpvalues=function(v37,v38) local v39=getrenv();return setfenv(LPH_NO_VIRTUALIZE(function(...) return func(...);end),setmetatable({func=v38},{__index=v39,__newindex=v39}));end;return v0;
